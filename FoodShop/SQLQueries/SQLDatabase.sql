IF DB_ID('FOODSHOP') IS NULL
BEGIN
	CREATE DATABASE FOODSHOP
END
GO

IF DB_ID('FOODSHOP') IS NULL
	THROW 51000, 'DATABASE NOT FOUND', 1;
ELSE
BEGIN
	USE FOODSHOP
	
	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'FOODDETAILS')
	BEGIN
		CREATE TABLE FOODDETAILS(
			Id INT PRIMARY KEY NOT NULL IDENTITY(1,1),
			Guid NVARCHAR(40) UNIQUE NOT NULL,
			Name NVARCHAR(MAX) NOT NULL,
			Price INT NULL,
			Description NVARCHAR(MAX) NULL
		)

	END;

	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'USERORDER')
	BEGIN
		CREATE TABLE USERORDER(
			Id INT PRIMARY KEY NOT NULL IDENTITY(1, 1),
			Guid NVARCHAR(40) NOT NULL UNIQUE,
			IsPaid NVARCHAR(5) NULL
		)
	END;
	
	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ORDERDETAILS')
	BEGIN
		CREATE TABLE ORDERDETAILS(
			Id INT PRIMARY KEY NOT NULL IDENTITY(1, 1),
			Guid NVARCHAR(40) NOT NULL,
			UserGuid NVARCHAR(40) NOT NULL FOREIGN KEY REFERENCES USERORDER(Guid),
			FoodGuid NVARCHAR(40) NOT NULL FOREIGN KEY REFERENCES FOODDETAILS(Guid),
			Quantity INT NULL,
		)
	END;
END
GO

-- ADD NEW ORDER
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'CREATENEWORDER' AND ROUTINE_TYPE = 'PROCEDURE')
	DROP PROCEDURE CREATENEWORDER;
GO
CREATE PROCEDURE CREATENEWORDER
	@UserGuid NVARCHAR(40)
AS
BEGIN

	DECLARE @ORDERGUID NVARCHAR(40) = (SELECT NEWID());
	BEGIN TRY
		INSERT INTO USERORDER (
			Guid
		)
		VALUES(
			@ORDERGUID
		)

		SELECT @ORDERGUID AS Result;
	END TRY
	BEGIN CATCH
		DECLARE @ERROR NVARCHAR(MAX) = ERROR_MESSAGE();
		THROW 51000, @ERROR,1;
	END CATCH
	
END
GO

-- ADD NEW ITEM TO ORDER
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'ADDORDER' AND ROUTINE_TYPE = 'PROCEDURE')
	DROP PROCEDURE ADDORDER;
GO

CREATE PROCEDURE ADDORDER
	@OrderID NVARCHAR(40), -- USER GUID
	@FoodGuid NVARCHAR(40), -- ITEM GUID
	@Quantity INT
AS
BEGIN

-- Check if order exists
	IF NOT EXISTS (SELECT * FROM USERORDER WHERE USERORDER.Guid = @OrderID)
		THROW 51000, 'ORDER DOES NOT EXITST', 1;
	
	INSERT INTO ORDERDETAILS(
		Guid,
		UserGuid,
		FoodGuid,
		Quantity
	)
	VALUES(
		(SELECT NEWID()),
		@OrderID,
		@FoodGuid,
		@Quantity
	)
END
GO

-- GET ORDER DETAILS
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'GETUSERORDER' AND ROUTINE_TYPE = 'PROCEDURE')
	DROP PROCEDURE GETUSERORDER;
GO

CREATE PROCEDURE GETUSERORDER
	@UserGuid NVARCHAR(40)
AS
BEGIN
	SELECT
		ORDERDETAILS.Guid,
		ORDERDETAILS.FoodGuid,
		ORDERDETAILS.Quantity,
		FOODDETAILS.Name,
		FOODDETAILS.Description,
		FOODDETAILS.Price
	FROM ORDERDETAILS
	INNER JOIN FOODDETAILS ON ORDERDETAILS.FoodGuid = FOODDETAILS.Guid
	WHERE ORDERDETAILS.UserGuid = @UserGuid;
END
GO

-- GET LIST OF FOOD
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'LISTFOODS' AND ROUTINE_TYPE='PROCEDURE')
	DROP PROCEDURE LISTFOODS;
GO

CREATE PROCEDURE LISTFOODS
AS
BEGIN
	SELECT
		FOODDETAILS.Guid,
		FOODDETAILS.Name,
		FOODDETAILS.Description,
		FOODDETAILS.Price
	FROM FOODDETAILS;
END

-- PAY ORDER
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'PAYORDERCOMPLETION' AND ROUTINE_TYPE='PROCEDURE')
	DROP PROCEDURE PAYORDERCOMPLETION;
GO

CREATE PROCEDURE PAYORDERCOMPLETION
	@OrderGuid NVARCHAR(40)
AS
BEGIN
	BEGIN TRY
		UPDATE USERORDER
		SET IsPaid = '1'
		WHERE USERORDER.Guid = @OrderGuid;
	END TRY
	BEGIN CATCH
		THROW 51000, 'Order not found',1;
	END CATCH
END;
GO

-- CHECK ORDER
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'CHECKORDER' AND ROUTINE_TYPE = 'PROCEDURE')
	DROP PROCEDURE CHECKORDER;
GO

CREATE PROCEDURE CHECKORDER
	@OrderGuid NVARCHAR(40)
AS
BEGIN
	DECLARE @Result INT;
	IF EXISTS (SELECT USERORDER.IsPaid FROM USERORDER WHERE USERORDER.Guid = @OrderGuid AND USERORDER.IsPaid IS NOT NULL)
		SELECT 1 AS Result;
	ELSE
		SELECT 0 AS Result;

END
GO


-- SEARCH FOOD
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'SEARCHFOOD' AND ROUTINE_TYPE='PROCEDURE')
	DROP PROCEDURE SEARCHFOOD;
GO

CREATE PROCEDURE SEARCHFOOD
	@Name NVARCHAR(MAX)
AS
BEGIN
	SELECT
		FOODDETAILS.Guid,
		FOODDETAILS.Name,
		FOODDETAILS.Description,
		FOODDETAILS.Price
	FROM FOODDETAILS
	WHERE
	FOODDETAILS.Name LIKE '%' + @Name + '%';
END;
GO

-- ADD EXAMPLE FOOD
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'FOODDETAILS')
BEGIN
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Avocado',
		20000,
		'A fruit that is high in healthy fats and is often used in salads and sandwiches.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Salmon',
		150000,
		'A fish that is rich in omega-3 fatty acids and is often grilled or baked.'
	)

	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Quinoa',
		50000,
		'A grain that is high in protein and fiber and is often used in salads and bowls.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Kale',
		15000,
		'A leafy green vegetable that is high in vitamins and minerals and is often used in salads and smoothies.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Sweet potatoes',
		10000,
		'A root vegetable that is high in fiber and vitamins and is often roasted or mashed.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Almonds',
		70000,
		'A nut that is high in healthy fats and protein and is often used as a snack or in baking.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Greek yogurt',
		50000,
		'A dairy product that is high in protein and calcium and is often used as a breakfast food or snack.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Spinach',
		15000,
		'A leafy green vegetable that is high in vitamins and minerals and is often used in salads and smoothies.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Blueberries',
		30000,
		'A fruit that is high in antioxidants and fiber and is often used in smoothies or as a snack.'
	)
	INSERT INTO FOODDETAILS(
		Guid,
		Name,
		Price,
		Description)
	VALUES(
		(SELECT NEWID()),
		'Chicken breast',
		40000,
		'A lean protein source that can be grilled or baked and used in various dishes such as salads, sandwiches, or stir-fries.'
	)
END
GO